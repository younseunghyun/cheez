"""
Django settings for cheez project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '47t*ff!9zq=hq@ri6yiuox2^%k0_g02y*f21#99t5w8so0&%vz'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

ALLOWED_HOSTS = ['.cheez.co', 'localhost']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'storages',
    'posts',
    'users',
    'ogp',
    'rankings',
    'webpage',
)


REST_FRAMEWORK = {
    'UNICODE_JSON': False,  # http://www.django-rest-framework.org/api-guide/settings/#encodings
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_RENDERER_CLASSES': (
         #UnicodeJSONRenderer has an ensure_ascii = False attribute,
         #thus it will not escape characters.
        'rest_framework.renderers.JSONRenderer',
         #You only need to keep this one if you're using the browsable API
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
     'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    ),
    'PAGE_SIZE': 10
}

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'cheez.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cheez.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cheezdb',
        'HOST': 'cheez.cc6jer4i5lpa.ap-southeast-1.rds.amazonaws.com',
        'USER': 'cheez',
        'PASSWORD': 'clwmajrrhtlvek',
        'OPTIONS': {
            'charset': 'utf8',
            'use_unicode': True, },
    },
    'recommendation': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cheez_recommend',
        'HOST': 'cheez-recommend-server.cl1sv9vmo2na.ap-northeast-1.rds.amazonaws.com',
        'USER': 'cheez',
        'PASSWORD': 'clwmajrrhtlvek',
        'OPTIONS': {
            'charset': 'utf8',
            'use_unicode': True, },
    },
}

DATABASE_ROUTERS = ['cheez.database_router.DefaultDatabaseRouter',]

if 'test' in sys.argv:
    DATABASES['default']['ENGINE'] = 'django.db.backends.sqlite3'
DATABASES['default'].pop('OPTIONS')

AUTH_USER_MODEL = "users.User"

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# TypeError: unsupported operand type(s) for +=: 'NoneType' and 'str'
# http://www.reddit.com/r/django/comments/2w41t0/tdd_with_python_chapter_7_errors_when_adding/
STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, '../static'))



# s3 setting
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'

AWS_ACCESS_KEY_ID = "AKIAJ6STLD3252AX2GYQ"
AWS_SECRET_ACCESS_KEY = "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"

AWS_S3_SECURE_URLS = False

AWS_STORAGE_BUCKET_NAME = "cheez-image"
AWS_S3_CUSTOM_DOMAIN = AWS_STORAGE_BUCKET_NAME + ".s3.amazonaws.com"
#AWS_S3_CUSTOM_DOMAIN = "d2tapiqtbmknxr.cloudfront.net"
AWS_QUERYSTRING_AUTH = False


# SQS Setting
BROKER_URL = 'amqp://guest:guest@localhost:5672'

# logging setting
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.abspath(os.path.join(BASE_DIR, '../logs/cheez.log')),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'propagate': True,
            'level': 'WARNING',
        },
        'django.request': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': False,
        },
    }
}
